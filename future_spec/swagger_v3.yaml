openapi: 3.0.0
info:
  title: VMware Fusion REST API Swagger Spec
  version: "3"
  description: Our amazing spec for VMware Fusion and Workstation!
  termsOfService: http://swagger.io/terms/
tags:
  - name: VM Management
  - name: VM Power Management
  - name: VM Shared Folders Management
  - name: VM Network Adapters Management
  - name: Host Networks Management
paths:
  /vms:
    get:
      tags:
        - VM Management
      summary: Returns a list of VM IDs and paths for all VMs
      operationId: getAllVMs
      responses:
        "200":
          description: All VMs' ID and path
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VMID"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    post:
      tags:
        - VM Management
      summary: Creates a copy of the VM
      operationId: createVM
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/VMCloneParameter"
        description: Parameters of VM to create
        required: true
      responses:
        "201":
          description: VM information
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/VMInformation"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "406":
          description: Content type was not supported
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "409":
          description: Resource state conflicts
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/vms/{id}":
    get:
      tags:
        - VM Management
      summary: Returns the VM setting information of a VM
      operationId: getVM
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
      responses:
        "200":
          description: VM information
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/VMInformation"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    put:
      tags:
        - VM Management
      summary: Updates the VM settings
      operationId: updateVM
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/VMParameter"
        description: VM definition
        required: true
      responses:
        "200":
          description: VM information
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/VMInformation"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "406":
          description: Content type was not supported
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "409":
          description: Resource state conflicts
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    delete:
      tags:
        - VM Management
      summary: Deletes a VM
      operationId: deleteVM
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
      responses:
        "204":
          description: VM deleted
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "409":
          description: Resource state conflicts
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/vms/{id}/power":
    get:
      tags:
        - VM Power Management
      summary: Returns the power state of the VM
      operationId: getPowerState
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
      responses:
        "200":
          description: VM power state
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/VMPowerState"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    put:
      tags:
        - VM Power Management
      summary: Changes the VM power state
      operationId: changePowerState
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/VMPowerOperation"
        description: "VM power operation: on, off, shutdown, suspend, pause, unpause"
        required: true
      responses:
        "200":
          description: VM power state
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/VMPowerState"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "406":
          description: Content type was not supported
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "409":
          description: Resource state conflicts
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/vms/{id}/sharedfolders":
    get:
      tags:
        - VM Shared Folders Management
      summary: Returns all shared folders mounted in the VM
      operationId: getAllSharedFolders
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Shared folders mounted in the VM
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/SharedFolders"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    post:
      tags:
        - VM Shared Folders Management
      summary: Mounts a new shared folder in the VM
      operationId: createSharedFolder
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/SharedFolder"
        description: Parameters of the shared folder to mount
        required: true
      responses:
        "201":
          description: Shared folders mounted in the VM
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/SharedFolders"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "406":
          description: Content type was not supported
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "409":
          description: Resource state conflicts
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/vms/{id}/sharedfolders/{folder id}":
    delete:
      tags:
        - VM Shared Folders Management
      summary: Deletes a shared folder
      operationId: deleteSharedFolder
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
        - name: folder id
          in: path
          description: ID of shared folder
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Shared folder deleted
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    put:
      tags:
        - VM Shared Folders Management
      summary: Updates a shared folder mounted in the VM
      operationId: updataSharedFolder
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
        - name: folder id
          in: path
          description: ID of VM shared folder
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/SharedFolderParameter"
        description: Parameters of the shared folder to update to
        required: true
      responses:
        "200":
          description: Shared folders mounted in the VM
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/SharedFolders"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "406":
          description: Content type was not supported
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/vms/{id}/nic":
    get:
      tags:
        - VM Network Adapters Management
      summary: Returns all network adapters in the VM
      operationId: getAllNICDevices
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Network adapters in the VM
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/NICDevices"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    post:
      tags:
        - VM Network Adapters Management
      summary: Creates a network adapter in the VM
      operationId: createNICDevice
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/NICDeviceParameter"
        description: Parameters of network adapter to create
        required: true
      responses:
        "201":
          description: Information of the network adapter created
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/NICDevice"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "406":
          description: Content type was not supported
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "409":
          description: Resource state conflicts
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/vms/{id}/nic/{index}":
    delete:
      tags:
        - VM Network Adapters Management
      summary: Deletes a VM network adapter
      operationId: deleteNICDevice
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
        - name: index
          in: path
          description: Index of VM network adapter
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Network adapter deleted
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "406":
          description: Content type was not supported
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "409":
          description: Resource state conflicts
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    put:
      tags:
        - VM Network Adapters Management
      summary: Updates a network adapter in the VM
      operationId: updateNICDevice
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
        - name: index
          in: path
          description: Index of VM network adapter
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/NICDeviceParameter"
        description: Parameters of network adapter to update to
        required: true
      responses:
        "200":
          description: Information of the network adapter updated to
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/NICDevice"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "406":
          description: Content type was not supported
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/vms/{id}/ip":
    get:
      tags:
        - VM Network Adapters Management
      summary: Returns the IP address of a VM
      operationId: getIPAddress
      parameters:
        - name: id
          in: path
          description: ID of VM
          required: true
          schema:
            type: string
      responses:
        "200":
          description: VM IP address
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                type: object
                required:
                  - ip
                properties:
                  ip:
                    type: string
                    description: Guest OS IP address
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "409":
          description: Resource state conflicts
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  /vmnets:
    post:
      tags:
        - Host Networks Management
      summary: Creates a virtual network
      operationId: createNetwork
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/CreateVmnetParameter"
        description: Host network to be created
        required: true
      responses:
        "201":
          description: Virtual network
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/Network"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "406":
          description: Content type was not supported
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "409":
          description: Resource state conflicts
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  /vmnet:
    get:
      tags:
        - Host Networks Management
      summary: Returns all virtual networks
      operationId: getAllNetworks
      responses:
        "200":
          description: All virtual networks
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/Networks"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/vmnet/{vmnet}/portforward":
    get:
      tags:
        - Host Networks Management
      summary: Returns all port forwardings
      operationId: getPortforwards
      parameters:
        - name: vmnet
          in: path
          description: NAT type of virtual network
          required: true
          schema:
            type: string
      responses:
        "200":
          description: All port forwardings
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/Portforwards"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/vmnet/{vmnet}/mactoip":
    get:
      tags:
        - Host Networks Management
      summary: Returns all MAC-to-IP settings for DHCP service
      operationId: getMACToIPs
      parameters:
        - name: vmnet
          in: path
          description: Virtual network that has DHCP enabled
          required: true
          schema:
            type: string
      responses:
        "200":
          description: All mac to ip settings
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/MACToIPs"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "409":
          description: Resource state conflicts
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/vmnet/{vmnet}/mactoip/{mac}":
    put:
      tags:
        - Host Networks Management
      summary: Updates the MAC-to-IP binding
      operationId: updateMacToIP
      parameters:
        - name: vmnet
          in: path
          description: Virtual network that enabled DHCP
          required: true
          schema:
            type: string
        - name: mac
          in: path
          description: Mac address that want to be mapped with a given IP
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/MacToIPParameter"
        description: IP that will be assigned to given Mac address. If empty IP, the
          original Mac to IP binding will be deleted
        required: true
      responses:
        "200":
          description: Mac to IP mapping updated
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "406":
          description: Content type was not supported
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "409":
          description: Resource state conflicts
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/vmnet/{vmnet}/portforward/{protocol}/{port}":
    put:
      tags:
        - Host Networks Management
      summary: Updates port forwarding
      operationId: updatePortforward
      parameters:
        - name: vmnet
          in: path
          description: NAT type of virtual network
          required: true
          schema:
            type: string
        - name: protocol
          in: path
          description: "Protocol type: tcp, udp"
          required: true
          schema:
            type: string
        - name: port
          in: path
          description: Host port number
          required: true
          schema:
            type: integer
            format: int16
      requestBody:
        content:
          application/vnd.vmware.vmw.rest-v1+json:
            schema:
              $ref: "#/components/schemas/PortforwardParameter"
        description: Guest to forward to
        required: true
      responses:
        "200":
          description: Port forwarding updated
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "406":
          description: Content type was not supported
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    delete:
      tags:
        - Host Networks Management
      summary: Deletes port forwarding
      operationId: deletePortforward
      parameters:
        - name: vmnet
          in: path
          description: NAT type of virtual network
          required: true
          schema:
            type: string
        - name: protocol
          in: path
          description: "Protocol type: tcp, udp"
          required: true
          schema:
            type: string
        - name: port
          in: path
          description: Host port number
          required: true
          schema:
            type: integer
            format: int16
      responses:
        "204":
          description: Port forwarding deleted
        "400":
          description: Invalid parameters
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "401":
          description: Authentication failed
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "403":
          description: Permission denied
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: No such resource
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "406":
          description: Content type was not supported
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "500":
          description: Server error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        default:
          description: Unexpected error
          content:
            application/vnd.vmware.vmw.rest-v1+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
servers:
  - url: /api
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    VMParameter:
      type: object
      properties:
        processors:
          $ref: "#/components/schemas/VMProcessors"
        memory:
          $ref: "#/components/schemas/VMMemory"
    VMInformation:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        cpu:
          $ref: "#/components/schemas/VMCPU"
        memory:
          $ref: "#/components/schemas/VMMemory"
    VMCloneParameter:
      type: object
      required:
        - name
        - parentId
      properties:
        name:
          description: New VM name
          type: string
        parentId:
          description: Existing VM ID to clone.
          type: string
    VMID:
      required:
        - id
        - path
      properties:
        id:
          type: string
          description: ID of the VM
        path:
          type: string
          description: Path of the VM
    VMPowerState:
      type: object
      required:
        - power_state
      properties:
        power_state:
          type: string
          enum:
            - poweredOn
            - poweredOff
            - paused
            - suspended
    VMCPU:
      description: The CPU information of VM
      type: object
      readOnly: true
      properties:
        processors:
          $ref: "#/components/schemas/VMProcessors"
    VMProcessors:
      description: Number of processor cores
      type: integer
      format: int32
      readOnly: true
      default: 1
    VMMemory:
      description: Memory size in mega bytes
      type: integer
      format: int32
      readOnly: true
      default: 512
    VMPowerOperation:
      type: string
      enum:
        - on
        - off
        - shutdown
        - suspend
        - pause
        - unpause
    SharedFolder:
      required:
        - folder_id
        - host_path
        - flags
      properties:
        folder_id:
          type: string
          description: ID of folder which be mounted to the host
        host_path:
          type: string
          description: Path of the host shared folder
        flags:
          type: integer
          description: >
            The flags property specifies how the folder will be accessed by the
            VM.

            There is only one flag supported which is "4" and means read/write access.
    SharedFolders:
      description: The shared folders mounted to this VM
      type: array
      items:
        $ref: "#/components/schemas/SharedFolder"
    SharedFolderParameter:
      required:
        - host_path
        - flags
      properties:
        host_path:
          type: string
          description: Path of the host shared folder
        flags:
          type: integer
          description: >
            The flags property specifies how the folder will be accessed by the
            VM.

            There is only one flag supported which is "4" and means read/write access.
    NICDevice:
      required:
        - index
        - type
        - vmnet
        - macAddress
      properties:
        index:
          $ref: "#/components/schemas/NICIndex"
        type:
          type: string
          description: The network type of network adapter
          enum:
            - bridged
            - nat
            - hostonly
            - custom
        vmnet:
          type: string
          description: The vmnet name
        macAddress:
          type: string
          description: Mac address
    NICDevices:
      description: The list of network adapters
      type: object
      required:
        - num
        - nics
      properties:
        num:
          $ref: "#/components/schemas/NICNumber"
        nics:
          description: The network adapter added to this VM
          type: array
          items:
            $ref: "#/components/schemas/NICDevice"
    NICDeviceParameter:
      required:
        - type
        - vmnet
      properties:
        type:
          type: string
          description: The network type of network adapter
          enum:
            - custom
            - bridged
            - nat
            - hostonly
        vmnet:
          type: string
          description: The vmnet name, it should only be used while type is custom
    CreateVmnetParameter:
      required:
        - name
      properties:
        name:
          type: string
          description: The host network name
        type:
          type: string
          description: The host network type
          enum:
            - nat
            - hostOnly
    Network:
      description: The virtual network
      required:
        - name
        - type
        - dhcp
        - subnet
        - mask
      properties:
        name:
          type: string
          description: Name of virtual network
        type:
          type: string
          enum:
            - bridged
            - nat
            - hostOnly
        dhcp:
          type: string
          enum:
            - "true"
            - "false"
        subnet:
          type: string
        mask:
          type: string
    Networks:
      description: The list of virtual networks
      type: object
      required:
        - num
        - vmnets
      properties:
        num:
          $ref: "#/components/schemas/Number"
        vmnets:
          description: The list of virtual networks
          type: array
          items:
            $ref: "#/components/schemas/Network"
    MACToIP:
      description: The MAC to IP setting
      required:
        - vmnet
        - mac
        - ip
      properties:
        vmnet:
          type: string
        mac:
          type: string
        ip:
          type: string
    MACToIPs:
      description: The list of MAC to IP settings
      type: object
      required:
        - num
        - mactoip
      properties:
        num:
          $ref: "#/components/schemas/Number"
        mactoips:
          description: The list of MAC to IP settings
          type: array
          items:
            $ref: "#/components/schemas/MACToIP"
    Portforward:
      description: The port forwarding
      required:
        - port
        - protocol
        - desc
        - guest
      properties:
        port:
          $ref: "#/components/schemas/Port"
        protocol:
          type: string
          enum:
            - tcp
            - udp
        desc:
          type: string
        guest:
          required:
            - ip
            - port
          properties:
            ip:
              type: string
            port:
              $ref: "#/components/schemas/Port"
    Portforwards:
      description: The list of port forwarding
      type: object
      required:
        - num
        - port_forwardings
      properties:
        num:
          $ref: "#/components/schemas/Number"
        port_forwardings:
          description: The list of port forwardings
          type: array
          items:
            $ref: "#/components/schemas/Portforward"
    PortforwardParameter:
      required:
        - guestIp
        - guestPort
      properties:
        guestIp:
          type: string
        guestPort:
          $ref: "#/components/schemas/Port"
        desc:
          type: string
    Number:
      description: Number of items
      type: integer
      format: int32
      readOnly: true
      default: 0
    NICNumber:
      description: Number of NIC devices
      type: integer
      format: int32
      readOnly: true
      default: 1
    NICIndex:
      description: Index of Network Adapters
      type: integer
      format: int32
      readOnly: true
      default: 1
    Port:
      description: port of communication
      type: integer
      format: int16
      readOnly: true
      default: 0
    DaemonState:
      type: string
      enum:
        - on
        - off
    MacToIPParameter:
      required:
        - IP
      properties:
        IP:
          type: string
          description: IP that will be assiged to given Mac
    ErrorModel:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
